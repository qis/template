# Lint
include_guard(GLOBAL)
set(CMAKE_C_COMPILER clang)
set(CMAKE_CXX_COMPILER clang++)
set(CMAKE_MT mt)

set(CMAKE_C_COMPILER_LAUNCHER "")
set(CMAKE_CXX_COMPILER_LAUNCHER "")

set(CMAKE_MSVC_DEBUG_INFORMATION_FORMAT "Embedded" CACHE STRING "")
include(${CMAKE_CURRENT_LIST_DIR}/toolchain.cmake)

find_program(CLANG NAMES clang REQUIRED)
get_filename_component(CLANG_BIN "${CLANG}" DIRECTORY)
get_filename_component(LLVM_ROOT "${CLANG_BIN}" DIRECTORY)
if(LLVM_ROOT MATCHES "[Xx]64$")
  get_filename_component(LLVM_ROOT "${LLVM_ROOT}" DIRECTORY)
endif()
find_program(CMAKE_C_CLANG_TIDY NAMES clang-tidy PATHS "${LLVM_ROOT}/x64/bin" NO_DEFAULT_PATH REQUIRED)
find_program(CMAKE_CXX_CLANG_TIDY NAMES clang-tidy PATHS "${LLVM_ROOT}/x64/bin" NO_DEFAULT_PATH REQUIRED)

set(CMAKE_C_FLAGS_INIT "-DWINVER=0x0601 -D_WIN32_WINNT=0x0601 -DNTDDI_VERSION=0x06010000")
set(CMAKE_CXX_FLAGS_INIT "-DWINVER=0x0601 -D_WIN32_WINNT=0x0601 -DNTDDI_VERSION=0x06010000")

foreach(LANG IN ITEMS C CXX)
  unset(CMAKE_${LANG}_FLAGS_DEBUG_INIT)
  unset(CMAKE_${LANG}_FLAGS_RELEASE_INIT)
endforeach()

foreach(TYPE IN ITEMS EXE SHARED ARCHIVE STATIC)
  unset(CMAKE_${TYPE}_LINKER_FLAGS_INIT)
  unset(CMAKE_${TYPE}_LINKER_FLAGS_DEBUG_INIT)
  unset(CMAKE_${TYPE}_LINKER_FLAGS_RELEASE_INIT)
endforeach()
